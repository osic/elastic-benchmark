{
  "comments": [
    {
      "key": {
        "uuid": "d0f644e6_9a881ac6",
        "filename": "elastic_benchmark/main.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1010733
      },
      "writtenOn": "2017-03-27T21:36:09Z",
      "side": 1,
      "message": "While 400\u0027s are probably unlikely, these should probably be caught and reported rather than ignored. Per the documentation it looks like this would add the new data to the existing index, which would result in multiple runs being stored under this index rather than a single run as intended in this change.",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c0d2b96_b7279532",
        "filename": "elastic_benchmark/main.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1010716
      },
      "writtenOn": "2017-03-27T22:04:11Z",
      "side": 1,
      "message": "I\u0027m not aware of that.  But according to my tests there is only one run stored under the index once this is run which deletes the last record. Please point me to the documentation.  Thanks.",
      "parentUuid": "d0f644e6_9a881ac6",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4df8b64_db4c9e09",
        "filename": "elastic_benchmark/main.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1010733
      },
      "writtenOn": "2017-03-27T22:58:33Z",
      "side": 1,
      "message": "Documentation is at http://elasticsearch-py.readthedocs.io/en/master/api.html#elasticsearch.Elasticsearch.index. Since the ID is not specified in the summary dict, it will add rather than update if the index exists.\n\nIt probably would not happen at all since the delete body wouldn\u0027t be changing, therefore would be unlikely to return a 400. but in the event it does it would require manual deletion from the database, and invalidate the intended use of this index until it is removed.\n\nI understand the 404 and think that should stay, I just think that any other unexpected error code should not be ignored.",
      "parentUuid": "7c0d2b96_b7279532",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4649a36_568afe02",
        "filename": "elastic_benchmark/main.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1010716
      },
      "writtenOn": "2017-03-27T23:08:15Z",
      "side": 1,
      "message": "Please pull the latest version. I already removed the 400 :).  Also this doesn\u0027t pull the summary at all.  It only grabs an index name.  I may not be grasping what you are saying.  This is a delete() index http://elasticsearch-py.readthedocs.io/en/master/api.html#elasticsearch.Elasticsearch.delete.  This is not index() as you linked.",
      "parentUuid": "d4df8b64_db4c9e09",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7096396_f74c6d44",
        "filename": "elastic_benchmark/main.py",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1010733
      },
      "writtenOn": "2017-03-27T23:21:34Z",
      "side": 1,
      "message": "Figured out how to pull the latest patch.\n\nThe API documentation I linked and what I was referring to was what would happen in calling index() *after* delete(). My concern is that when running index() and adding data to the dashboard, that is what would add more data to the existing index and invalidate the change this is trying to do. The index would exist and that would happen *if* the delete failed due to a 400 that was ignored rather than throwing an error.\n\nThat was why I felt the 400 should not be ignored. Not because of an issue specifically with the delete() call, but what would happen in the following index() calls if the delete() failed with a 400 that was ignored.",
      "parentUuid": "b4649a36_568afe02",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9231a665_741c63db",
        "filename": "elastic_benchmark/upgrade.py",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1010733
      },
      "writtenOn": "2017-03-27T21:36:09Z",
      "side": 1,
      "message": "This seems like more effort than it should be, causing a duplication of an index for what should be a basic feature of databases. Is ES/Kibana unable to display the latest results using a SORT and LIMIT-type query to only return the most recent results?",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42ad74f5_27da57e2",
        "filename": "elastic_benchmark/upgrade.py",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1010716
      },
      "writtenOn": "2017-03-27T22:04:11Z",
      "side": 1,
      "message": "Yes, of course ES is capable of doing that but I chose to go this route. This is actually less code than the query would be and similar if not less than the lookup. This is not a duplication of an index.  I am deleting the index then creating it again with the latest data.  At most this index will only have 1 document in it at a time. Please point me to why you feel it will be duplicated.  Thanks.",
      "parentUuid": "9231a665_741c63db",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88b7c443_f955d289",
        "filename": "elastic_benchmark/upgrade.py",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1010733
      },
      "writtenOn": "2017-03-27T22:58:33Z",
      "side": 1,
      "message": "Sorry for the confusion, I used \"index\" where I should have used \"document.\"\n\nI understand this would be only a small document and not affect the performance or storage space used in this database. But, using a more complicated query that handles a sort and limit to return what is desired is a better route than removing and recreating an index by duplicating a document each time data is entered to make an easier query.\n\nBut, I\u0027ll happily concede on this as you\u0027re not only more familiar with the database and dashboard, and also so we\u0027re not investing more time discussing a small point and taking away from the time and effort that this is intended to be saving. :D",
      "parentUuid": "42ad74f5_27da57e2",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3deae9f7_3865296a",
        "filename": "elastic_benchmark/upgrade.py",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1010716
      },
      "writtenOn": "2017-03-27T23:08:15Z",
      "side": 1,
      "message": "No problem.  The thing here is I can query and get the latest run. Kibana can\u0027t. I have to delete the index anyway in order to accomplish what I\u0027m trying to accomplish.  If I get the lastest run and add on to this index then it\u0027s not doing anything different from the last index.  I\u0027m creating a page that will only include the last run.  It\u0027s really a hack of sorts for Kibana because it doesn\u0027t give me an easy way to do it.",
      "parentUuid": "88b7c443_f955d289",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "448b2154_f5034234",
        "filename": "elastic_benchmark/upgrade.py",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1010733
      },
      "writtenOn": "2017-03-27T23:21:34Z",
      "side": 1,
      "message": "Sold.",
      "parentUuid": "3deae9f7_3865296a",
      "revId": "0fa1fca0d26bfda652d4f5b0b600c7dbf2d08756",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}